# 목차
- 운영체재 개요
- 컴퓨터 시스템의 구조
- 프로세스 관리
- CPU 스케줄링
- 병행 제어
- 데드락
- 메모리 관리
- 가상 메모리
- 파일 시스템
- 입출력 시스템
- 디스크 관리


## 운영 체제란(operating system, OS)?
- 컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 
다른 모든 소프트웨어와 하드웨어를 연결하는 
소프트 계층
- 하드웨어도 제어해야하기 때문에 다루기 까다로운 소프트웨어임


### 구조

```
사용자 / 사용자
/----------/
각종소프트웨어 / 사용자
/----------/
**운영체제**
/----------/
컴퓨터 하드웨어

```

## 운영체제의 목적
- 컴퓨터 시스템을 **퍈리하게 사용할 수 있는 환경을 제공**
    - 운영체제는 동시 사용자/프로그램들이 각각 독자적 컴퓨터에서 수행되는 것 같은 환상을 제공
    - 하드웨어를 직접 다루는 복잡한 부분을 운영체제가 대행
    
    -> 주어진 자원으로 최대한의 효율성을 추구하려 하지만 
    어느 한 사용자나 프로그램이 메모리를 지나치게 할당 받아 
    다른 사용자나 프로그램에 불이익을 주면 안 됌

- 컴퓨터 시스템의 **자원을 효율적으로 관리**
    - 자원C(CPU, 메모리, I/O 장치 등)의 효율적 관리
        - 주어진 자원으로 최대한의 성능을 내도록 -> 효율성
        - 특정 사용자 / 프로그램의 지나친 불이익이 발생하지 않도록 -> 형평성
    - 사용자 및 운영체제 자신의 보호    


## 운영체제의 기능
컴퓨터 부팅 -> 운영체제가 메모리에 올라가서 실행이 됨 -> 그리고 그 위에 프로그램들이 올라가서 실행됨

- CPU 스케줄링 
어떤 프로그램에게 CPU 사용권을 주느냐에 관한 내용
cpu는 여러프로그램에게 짧은 시간 할당이 됨 -> 여러프로그램이 마치 동시에 실행되는 것처럼 보임


- 메모리 관리
한정된 메모리를 어떻게 나누어 쓰느냐에 대한 내용


- 디스크 스케줄링(엘레베이터 스케줄링)
디스크에 들어온 요청을 어떤 순서로 처리하느냐에 대한 내용

디스크에 들어온 순서대로 요청을 처리해도 되지만 디스크가 요청을 효율적으로 처리하기 위해서
나중에 들어온 요청이라도 먼저 처리할 수도 있음

ex) 100층 엘레베이터에서 버튼 누름
1층에서 올라가는 버튼 누름
1층에서 2층 올라가는 사이에 2층에 있는 사람도 올라가는 버튼 누름
만약 누른 순서대로 운영한다면 1층 올라감 -> 100층까지 갔다가 2층으로 다시 내려옴 -> 2층에서 다시 올라감
이런 비효율적인 행동을 했을 것임
하지만 2층에 있는 사람이 100층에 있는 사람보다 나중에 눌렀지만 같은 방향으로 가는 거면
태우고 가는 게 훨씬 효율적임
이렇게 효율적으로 운영해라는 뜻

- 인터럽트, 캐싱
빠른 CPU와 느린 I/O 장치 간 속도차를 어떻게 극복하느냐에 대한 내용

cpu와 i/o는 속도가 백만배까지도 차이가 남(cpu가 더 빠름)
인터럽트 : 
cpu에서 프로그램 실행하다가 메모리에 있는 프로그램이 i/o 요청을 하면 cpu는 i/o 컨트롤러한테 요청을 부탁함
-> 그리고 나서 cpu는 요청이 올 때까지 기다림x 그사이에 실행할 수 있는 프로그램을 돌림
-> 그 사이에 컨트롤러가 요청한 것을 다 끝냄 -> cpu에게 인터럽트를 걸어서 요청한 거 다 수행했다고 알려줌
-> cpu는 프로그램을 메모리에 할당하고 난 후에 프로그램이 끝나면 인터럽트 체크를 하기 때문에 여기서 인터럽트를 체크하고 
cpu 스케줄링에 넣어서 프로그램이 실행될 수 있도록 함



## 프로세스의 상태(44분 19초~)
그림으로 보는 게 더 빠름
44분부터 보셈
